//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClienteGloomApp.ServicioGloom {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Jugador", Namespace="http://schemas.datacontract.org/2004/07/BibliotecaClases")]
    [System.SerializableAttribute()]
    public partial class Jugador : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string apellidosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string contraseñaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string correoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string iconoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nombreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nombreUsuarioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string tipoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string apellidos {
            get {
                return this.apellidosField;
            }
            set {
                if ((object.ReferenceEquals(this.apellidosField, value) != true)) {
                    this.apellidosField = value;
                    this.RaisePropertyChanged("apellidos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string contraseña {
            get {
                return this.contraseñaField;
            }
            set {
                if ((object.ReferenceEquals(this.contraseñaField, value) != true)) {
                    this.contraseñaField = value;
                    this.RaisePropertyChanged("contraseña");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string correo {
            get {
                return this.correoField;
            }
            set {
                if ((object.ReferenceEquals(this.correoField, value) != true)) {
                    this.correoField = value;
                    this.RaisePropertyChanged("correo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string icono {
            get {
                return this.iconoField;
            }
            set {
                if ((object.ReferenceEquals(this.iconoField, value) != true)) {
                    this.iconoField = value;
                    this.RaisePropertyChanged("icono");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nombre {
            get {
                return this.nombreField;
            }
            set {
                if ((object.ReferenceEquals(this.nombreField, value) != true)) {
                    this.nombreField = value;
                    this.RaisePropertyChanged("nombre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nombreUsuario {
            get {
                return this.nombreUsuarioField;
            }
            set {
                if ((object.ReferenceEquals(this.nombreUsuarioField, value) != true)) {
                    this.nombreUsuarioField = value;
                    this.RaisePropertyChanged("nombreUsuario");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string tipo {
            get {
                return this.tipoField;
            }
            set {
                if ((object.ReferenceEquals(this.tipoField, value) != true)) {
                    this.tipoField = value;
                    this.RaisePropertyChanged("tipo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ManejadorExcepciones", Namespace="http://schemas.datacontract.org/2004/07/BibliotecaClases")]
    [System.SerializableAttribute()]
    public partial class ManejadorExcepciones : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string codigoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string mensajeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string codigo {
            get {
                return this.codigoField;
            }
            set {
                if ((object.ReferenceEquals(this.codigoField, value) != true)) {
                    this.codigoField = value;
                    this.RaisePropertyChanged("codigo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string mensaje {
            get {
                return this.mensajeField;
            }
            set {
                if ((object.ReferenceEquals(this.mensajeField, value) != true)) {
                    this.mensajeField = value;
                    this.RaisePropertyChanged("mensaje");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Amistad", Namespace="http://schemas.datacontract.org/2004/07/BibliotecaClases")]
    [System.SerializableAttribute()]
    public partial class Amistad : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string estadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClienteGloomApp.ServicioGloom.Jugador jugadorAmigoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClienteGloomApp.ServicioGloom.Jugador nombreUsuarioField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string estado {
            get {
                return this.estadoField;
            }
            set {
                if ((object.ReferenceEquals(this.estadoField, value) != true)) {
                    this.estadoField = value;
                    this.RaisePropertyChanged("estado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClienteGloomApp.ServicioGloom.Jugador jugadorAmigo {
            get {
                return this.jugadorAmigoField;
            }
            set {
                if ((object.ReferenceEquals(this.jugadorAmigoField, value) != true)) {
                    this.jugadorAmigoField = value;
                    this.RaisePropertyChanged("jugadorAmigo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClienteGloomApp.ServicioGloom.Jugador nombreUsuario {
            get {
                return this.nombreUsuarioField;
            }
            set {
                if ((object.ReferenceEquals(this.nombreUsuarioField, value) != true)) {
                    this.nombreUsuarioField = value;
                    this.RaisePropertyChanged("nombreUsuario");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sala", Namespace="http://schemas.datacontract.org/2004/07/BibliotecaClases")]
    [System.SerializableAttribute()]
    public partial class Sala : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string codigoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string fechaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ganadorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string idAdministradorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string idSalaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string jugadorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int noJugadoresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int noJugadoresActualesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nombreSalaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string tipoPartidaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string tipoSalaField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string codigo {
            get {
                return this.codigoField;
            }
            set {
                if ((object.ReferenceEquals(this.codigoField, value) != true)) {
                    this.codigoField = value;
                    this.RaisePropertyChanged("codigo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string fecha {
            get {
                return this.fechaField;
            }
            set {
                if ((object.ReferenceEquals(this.fechaField, value) != true)) {
                    this.fechaField = value;
                    this.RaisePropertyChanged("fecha");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ganador {
            get {
                return this.ganadorField;
            }
            set {
                if ((object.ReferenceEquals(this.ganadorField, value) != true)) {
                    this.ganadorField = value;
                    this.RaisePropertyChanged("ganador");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string idAdministrador {
            get {
                return this.idAdministradorField;
            }
            set {
                if ((object.ReferenceEquals(this.idAdministradorField, value) != true)) {
                    this.idAdministradorField = value;
                    this.RaisePropertyChanged("idAdministrador");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string idSala {
            get {
                return this.idSalaField;
            }
            set {
                if ((object.ReferenceEquals(this.idSalaField, value) != true)) {
                    this.idSalaField = value;
                    this.RaisePropertyChanged("idSala");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string jugador {
            get {
                return this.jugadorField;
            }
            set {
                if ((object.ReferenceEquals(this.jugadorField, value) != true)) {
                    this.jugadorField = value;
                    this.RaisePropertyChanged("jugador");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int noJugadores {
            get {
                return this.noJugadoresField;
            }
            set {
                if ((this.noJugadoresField.Equals(value) != true)) {
                    this.noJugadoresField = value;
                    this.RaisePropertyChanged("noJugadores");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int noJugadoresActuales {
            get {
                return this.noJugadoresActualesField;
            }
            set {
                if ((this.noJugadoresActualesField.Equals(value) != true)) {
                    this.noJugadoresActualesField = value;
                    this.RaisePropertyChanged("noJugadoresActuales");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nombreSala {
            get {
                return this.nombreSalaField;
            }
            set {
                if ((object.ReferenceEquals(this.nombreSalaField, value) != true)) {
                    this.nombreSalaField = value;
                    this.RaisePropertyChanged("nombreSala");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string tipoPartida {
            get {
                return this.tipoPartidaField;
            }
            set {
                if ((object.ReferenceEquals(this.tipoPartidaField, value) != true)) {
                    this.tipoPartidaField = value;
                    this.RaisePropertyChanged("tipoPartida");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string tipoSala {
            get {
                return this.tipoSalaField;
            }
            set {
                if ((object.ReferenceEquals(this.tipoSalaField, value) != true)) {
                    this.tipoSalaField = value;
                    this.RaisePropertyChanged("tipoSala");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Carta", Namespace="http://schemas.datacontract.org/2004/07/BlbibliotecaClases")]
    [System.SerializableAttribute()]
    public partial class Carta : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string identificadorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string tipoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int valorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string identificador {
            get {
                return this.identificadorField;
            }
            set {
                if ((object.ReferenceEquals(this.identificadorField, value) != true)) {
                    this.identificadorField = value;
                    this.RaisePropertyChanged("identificador");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string tipo {
            get {
                return this.tipoField;
            }
            set {
                if ((object.ReferenceEquals(this.tipoField, value) != true)) {
                    this.tipoField = value;
                    this.RaisePropertyChanged("tipo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int valor {
            get {
                return this.valorField;
            }
            set {
                if ((this.valorField.Equals(value) != true)) {
                    this.valorField = value;
                    this.RaisePropertyChanged("valor");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Chat", Namespace="http://schemas.datacontract.org/2004/07/BlbibliotecaClases")]
    [System.SerializableAttribute()]
    public partial class Chat : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string mensajeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nombreUsuarioField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string mensaje {
            get {
                return this.mensajeField;
            }
            set {
                if ((object.ReferenceEquals(this.mensajeField, value) != true)) {
                    this.mensajeField = value;
                    this.RaisePropertyChanged("mensaje");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nombreUsuario {
            get {
                return this.nombreUsuarioField;
            }
            set {
                if ((object.ReferenceEquals(this.nombreUsuarioField, value) != true)) {
                    this.nombreUsuarioField = value;
                    this.RaisePropertyChanged("nombreUsuario");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicioGloom.IJugador")]
    public interface IJugador {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJugador/AgregarJugador", ReplyAction="http://tempuri.org/IJugador/AgregarJugadorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClienteGloomApp.ServicioGloom.ManejadorExcepciones), Action="http://tempuri.org/IJugador/AgregarJugadorManejadorExcepcionesFault", Name="ManejadorExcepciones", Namespace="http://schemas.datacontract.org/2004/07/BibliotecaClases")]
        int AgregarJugador(ClienteGloomApp.ServicioGloom.Jugador jugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJugador/AgregarJugador", ReplyAction="http://tempuri.org/IJugador/AgregarJugadorResponse")]
        System.Threading.Tasks.Task<int> AgregarJugadorAsync(ClienteGloomApp.ServicioGloom.Jugador jugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJugador/ActualizarJugador", ReplyAction="http://tempuri.org/IJugador/ActualizarJugadorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClienteGloomApp.ServicioGloom.ManejadorExcepciones), Action="http://tempuri.org/IJugador/ActualizarJugadorManejadorExcepcionesFault", Name="ManejadorExcepciones", Namespace="http://schemas.datacontract.org/2004/07/BibliotecaClases")]
        int ActualizarJugador(ClienteGloomApp.ServicioGloom.Jugador jugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJugador/ActualizarJugador", ReplyAction="http://tempuri.org/IJugador/ActualizarJugadorResponse")]
        System.Threading.Tasks.Task<int> ActualizarJugadorAsync(ClienteGloomApp.ServicioGloom.Jugador jugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJugador/AutenticarJugador", ReplyAction="http://tempuri.org/IJugador/AutenticarJugadorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClienteGloomApp.ServicioGloom.ManejadorExcepciones), Action="http://tempuri.org/IJugador/AutenticarJugadorManejadorExcepcionesFault", Name="ManejadorExcepciones", Namespace="http://schemas.datacontract.org/2004/07/BibliotecaClases")]
        int AutenticarJugador(ClienteGloomApp.ServicioGloom.Jugador jugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJugador/AutenticarJugador", ReplyAction="http://tempuri.org/IJugador/AutenticarJugadorResponse")]
        System.Threading.Tasks.Task<int> AutenticarJugadorAsync(ClienteGloomApp.ServicioGloom.Jugador jugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJugador/ObtenerJugador", ReplyAction="http://tempuri.org/IJugador/ObtenerJugadorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClienteGloomApp.ServicioGloom.ManejadorExcepciones), Action="http://tempuri.org/IJugador/ObtenerJugadorManejadorExcepcionesFault", Name="ManejadorExcepciones", Namespace="http://schemas.datacontract.org/2004/07/BibliotecaClases")]
        ClienteGloomApp.ServicioGloom.Jugador ObtenerJugador(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJugador/ObtenerJugador", ReplyAction="http://tempuri.org/IJugador/ObtenerJugadorResponse")]
        System.Threading.Tasks.Task<ClienteGloomApp.ServicioGloom.Jugador> ObtenerJugadorAsync(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJugador/BuscarJugadoresPorNombreUsuario", ReplyAction="http://tempuri.org/IJugador/BuscarJugadoresPorNombreUsuarioResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClienteGloomApp.ServicioGloom.ManejadorExcepciones), Action="http://tempuri.org/IJugador/BuscarJugadoresPorNombreUsuarioManejadorExcepcionesFa" +
            "ult", Name="ManejadorExcepciones", Namespace="http://schemas.datacontract.org/2004/07/BibliotecaClases")]
        ClienteGloomApp.ServicioGloom.Jugador[] BuscarJugadoresPorNombreUsuario(string nombreUsuarioParcial);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJugador/BuscarJugadoresPorNombreUsuario", ReplyAction="http://tempuri.org/IJugador/BuscarJugadoresPorNombreUsuarioResponse")]
        System.Threading.Tasks.Task<ClienteGloomApp.ServicioGloom.Jugador[]> BuscarJugadoresPorNombreUsuarioAsync(string nombreUsuarioParcial);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJugador/AgregarJugadorInvitado", ReplyAction="http://tempuri.org/IJugador/AgregarJugadorInvitadoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClienteGloomApp.ServicioGloom.ManejadorExcepciones), Action="http://tempuri.org/IJugador/AgregarJugadorInvitadoManejadorExcepcionesFault", Name="ManejadorExcepciones", Namespace="http://schemas.datacontract.org/2004/07/BibliotecaClases")]
        ClienteGloomApp.ServicioGloom.Jugador AgregarJugadorInvitado();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJugador/AgregarJugadorInvitado", ReplyAction="http://tempuri.org/IJugador/AgregarJugadorInvitadoResponse")]
        System.Threading.Tasks.Task<ClienteGloomApp.ServicioGloom.Jugador> AgregarJugadorInvitadoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJugador/EliminarJugadorInvitado", ReplyAction="http://tempuri.org/IJugador/EliminarJugadorInvitadoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClienteGloomApp.ServicioGloom.ManejadorExcepciones), Action="http://tempuri.org/IJugador/EliminarJugadorInvitadoManejadorExcepcionesFault", Name="ManejadorExcepciones", Namespace="http://schemas.datacontract.org/2004/07/BibliotecaClases")]
        bool EliminarJugadorInvitado(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJugador/EliminarJugadorInvitado", ReplyAction="http://tempuri.org/IJugador/EliminarJugadorInvitadoResponse")]
        System.Threading.Tasks.Task<bool> EliminarJugadorInvitadoAsync(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IJugador/CerrarSesionJugador")]
        void CerrarSesionJugador(string nombreJugador);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IJugador/CerrarSesionJugador")]
        System.Threading.Tasks.Task CerrarSesionJugadorAsync(string nombreJugador);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IJugadorChannel : ClienteGloomApp.ServicioGloom.IJugador, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class JugadorClient : System.ServiceModel.ClientBase<ClienteGloomApp.ServicioGloom.IJugador>, ClienteGloomApp.ServicioGloom.IJugador {
        
        public JugadorClient() {
        }
        
        public JugadorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public JugadorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public JugadorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public JugadorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AgregarJugador(ClienteGloomApp.ServicioGloom.Jugador jugador) {
            return base.Channel.AgregarJugador(jugador);
        }
        
        public System.Threading.Tasks.Task<int> AgregarJugadorAsync(ClienteGloomApp.ServicioGloom.Jugador jugador) {
            return base.Channel.AgregarJugadorAsync(jugador);
        }
        
        public int ActualizarJugador(ClienteGloomApp.ServicioGloom.Jugador jugador) {
            return base.Channel.ActualizarJugador(jugador);
        }
        
        public System.Threading.Tasks.Task<int> ActualizarJugadorAsync(ClienteGloomApp.ServicioGloom.Jugador jugador) {
            return base.Channel.ActualizarJugadorAsync(jugador);
        }
        
        public int AutenticarJugador(ClienteGloomApp.ServicioGloom.Jugador jugador) {
            return base.Channel.AutenticarJugador(jugador);
        }
        
        public System.Threading.Tasks.Task<int> AutenticarJugadorAsync(ClienteGloomApp.ServicioGloom.Jugador jugador) {
            return base.Channel.AutenticarJugadorAsync(jugador);
        }
        
        public ClienteGloomApp.ServicioGloom.Jugador ObtenerJugador(string nombreUsuario) {
            return base.Channel.ObtenerJugador(nombreUsuario);
        }
        
        public System.Threading.Tasks.Task<ClienteGloomApp.ServicioGloom.Jugador> ObtenerJugadorAsync(string nombreUsuario) {
            return base.Channel.ObtenerJugadorAsync(nombreUsuario);
        }
        
        public ClienteGloomApp.ServicioGloom.Jugador[] BuscarJugadoresPorNombreUsuario(string nombreUsuarioParcial) {
            return base.Channel.BuscarJugadoresPorNombreUsuario(nombreUsuarioParcial);
        }
        
        public System.Threading.Tasks.Task<ClienteGloomApp.ServicioGloom.Jugador[]> BuscarJugadoresPorNombreUsuarioAsync(string nombreUsuarioParcial) {
            return base.Channel.BuscarJugadoresPorNombreUsuarioAsync(nombreUsuarioParcial);
        }
        
        public ClienteGloomApp.ServicioGloom.Jugador AgregarJugadorInvitado() {
            return base.Channel.AgregarJugadorInvitado();
        }
        
        public System.Threading.Tasks.Task<ClienteGloomApp.ServicioGloom.Jugador> AgregarJugadorInvitadoAsync() {
            return base.Channel.AgregarJugadorInvitadoAsync();
        }
        
        public bool EliminarJugadorInvitado(string nombreUsuario) {
            return base.Channel.EliminarJugadorInvitado(nombreUsuario);
        }
        
        public System.Threading.Tasks.Task<bool> EliminarJugadorInvitadoAsync(string nombreUsuario) {
            return base.Channel.EliminarJugadorInvitadoAsync(nombreUsuario);
        }
        
        public void CerrarSesionJugador(string nombreJugador) {
            base.Channel.CerrarSesionJugador(nombreJugador);
        }
        
        public System.Threading.Tasks.Task CerrarSesionJugadorAsync(string nombreJugador) {
            return base.Channel.CerrarSesionJugadorAsync(nombreJugador);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicioGloom.IAmigos")]
    public interface IAmigos {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmigos/EnviarSolcitudAmistad", ReplyAction="http://tempuri.org/IAmigos/EnviarSolcitudAmistadResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClienteGloomApp.ServicioGloom.ManejadorExcepciones), Action="http://tempuri.org/IAmigos/EnviarSolcitudAmistadManejadorExcepcionesFault", Name="ManejadorExcepciones", Namespace="http://schemas.datacontract.org/2004/07/BibliotecaClases")]
        int EnviarSolcitudAmistad(ClienteGloomApp.ServicioGloom.Amistad solicitud);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmigos/EnviarSolcitudAmistad", ReplyAction="http://tempuri.org/IAmigos/EnviarSolcitudAmistadResponse")]
        System.Threading.Tasks.Task<int> EnviarSolcitudAmistadAsync(ClienteGloomApp.ServicioGloom.Amistad solicitud);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmigos/ValidarSolcitudAmistad", ReplyAction="http://tempuri.org/IAmigos/ValidarSolcitudAmistadResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClienteGloomApp.ServicioGloom.ManejadorExcepciones), Action="http://tempuri.org/IAmigos/ValidarSolcitudAmistadManejadorExcepcionesFault", Name="ManejadorExcepciones", Namespace="http://schemas.datacontract.org/2004/07/BibliotecaClases")]
        int ValidarSolcitudAmistad(ClienteGloomApp.ServicioGloom.Amistad solicitud);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmigos/ValidarSolcitudAmistad", ReplyAction="http://tempuri.org/IAmigos/ValidarSolcitudAmistadResponse")]
        System.Threading.Tasks.Task<int> ValidarSolcitudAmistadAsync(ClienteGloomApp.ServicioGloom.Amistad solicitud);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmigos/ArchivarAmistad", ReplyAction="http://tempuri.org/IAmigos/ArchivarAmistadResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClienteGloomApp.ServicioGloom.ManejadorExcepciones), Action="http://tempuri.org/IAmigos/ArchivarAmistadManejadorExcepcionesFault", Name="ManejadorExcepciones", Namespace="http://schemas.datacontract.org/2004/07/BibliotecaClases")]
        int ArchivarAmistad(ClienteGloomApp.ServicioGloom.Amistad solicitud);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmigos/ArchivarAmistad", ReplyAction="http://tempuri.org/IAmigos/ArchivarAmistadResponse")]
        System.Threading.Tasks.Task<int> ArchivarAmistadAsync(ClienteGloomApp.ServicioGloom.Amistad solicitud);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmigos/ObtenerListaAmigos", ReplyAction="http://tempuri.org/IAmigos/ObtenerListaAmigosResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClienteGloomApp.ServicioGloom.ManejadorExcepciones), Action="http://tempuri.org/IAmigos/ObtenerListaAmigosManejadorExcepcionesFault", Name="ManejadorExcepciones", Namespace="http://schemas.datacontract.org/2004/07/BibliotecaClases")]
        ClienteGloomApp.ServicioGloom.Amistad[] ObtenerListaAmigos(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmigos/ObtenerListaAmigos", ReplyAction="http://tempuri.org/IAmigos/ObtenerListaAmigosResponse")]
        System.Threading.Tasks.Task<ClienteGloomApp.ServicioGloom.Amistad[]> ObtenerListaAmigosAsync(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmigos/ObtenerCorreoAmigo", ReplyAction="http://tempuri.org/IAmigos/ObtenerCorreoAmigoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClienteGloomApp.ServicioGloom.ManejadorExcepciones), Action="http://tempuri.org/IAmigos/ObtenerCorreoAmigoManejadorExcepcionesFault", Name="ManejadorExcepciones", Namespace="http://schemas.datacontract.org/2004/07/BibliotecaClases")]
        string ObtenerCorreoAmigo(string nombreUsuarioAmigo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmigos/ObtenerCorreoAmigo", ReplyAction="http://tempuri.org/IAmigos/ObtenerCorreoAmigoResponse")]
        System.Threading.Tasks.Task<string> ObtenerCorreoAmigoAsync(string nombreUsuarioAmigo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmigos/ObtenerSolicitudesDeAmistadPorJugador", ReplyAction="http://tempuri.org/IAmigos/ObtenerSolicitudesDeAmistadPorJugadorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClienteGloomApp.ServicioGloom.ManejadorExcepciones), Action="http://tempuri.org/IAmigos/ObtenerSolicitudesDeAmistadPorJugadorManejadorExcepcio" +
            "nesFault", Name="ManejadorExcepciones", Namespace="http://schemas.datacontract.org/2004/07/BibliotecaClases")]
        ClienteGloomApp.ServicioGloom.Amistad[] ObtenerSolicitudesDeAmistadPorJugador(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmigos/ObtenerSolicitudesDeAmistadPorJugador", ReplyAction="http://tempuri.org/IAmigos/ObtenerSolicitudesDeAmistadPorJugadorResponse")]
        System.Threading.Tasks.Task<ClienteGloomApp.ServicioGloom.Amistad[]> ObtenerSolicitudesDeAmistadPorJugadorAsync(string nombreUsuario);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAmigosChannel : ClienteGloomApp.ServicioGloom.IAmigos, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AmigosClient : System.ServiceModel.ClientBase<ClienteGloomApp.ServicioGloom.IAmigos>, ClienteGloomApp.ServicioGloom.IAmigos {
        
        public AmigosClient() {
        }
        
        public AmigosClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AmigosClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AmigosClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AmigosClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int EnviarSolcitudAmistad(ClienteGloomApp.ServicioGloom.Amistad solicitud) {
            return base.Channel.EnviarSolcitudAmistad(solicitud);
        }
        
        public System.Threading.Tasks.Task<int> EnviarSolcitudAmistadAsync(ClienteGloomApp.ServicioGloom.Amistad solicitud) {
            return base.Channel.EnviarSolcitudAmistadAsync(solicitud);
        }
        
        public int ValidarSolcitudAmistad(ClienteGloomApp.ServicioGloom.Amistad solicitud) {
            return base.Channel.ValidarSolcitudAmistad(solicitud);
        }
        
        public System.Threading.Tasks.Task<int> ValidarSolcitudAmistadAsync(ClienteGloomApp.ServicioGloom.Amistad solicitud) {
            return base.Channel.ValidarSolcitudAmistadAsync(solicitud);
        }
        
        public int ArchivarAmistad(ClienteGloomApp.ServicioGloom.Amistad solicitud) {
            return base.Channel.ArchivarAmistad(solicitud);
        }
        
        public System.Threading.Tasks.Task<int> ArchivarAmistadAsync(ClienteGloomApp.ServicioGloom.Amistad solicitud) {
            return base.Channel.ArchivarAmistadAsync(solicitud);
        }
        
        public ClienteGloomApp.ServicioGloom.Amistad[] ObtenerListaAmigos(string nombreUsuario) {
            return base.Channel.ObtenerListaAmigos(nombreUsuario);
        }
        
        public System.Threading.Tasks.Task<ClienteGloomApp.ServicioGloom.Amistad[]> ObtenerListaAmigosAsync(string nombreUsuario) {
            return base.Channel.ObtenerListaAmigosAsync(nombreUsuario);
        }
        
        public string ObtenerCorreoAmigo(string nombreUsuarioAmigo) {
            return base.Channel.ObtenerCorreoAmigo(nombreUsuarioAmigo);
        }
        
        public System.Threading.Tasks.Task<string> ObtenerCorreoAmigoAsync(string nombreUsuarioAmigo) {
            return base.Channel.ObtenerCorreoAmigoAsync(nombreUsuarioAmigo);
        }
        
        public ClienteGloomApp.ServicioGloom.Amistad[] ObtenerSolicitudesDeAmistadPorJugador(string nombreUsuario) {
            return base.Channel.ObtenerSolicitudesDeAmistadPorJugador(nombreUsuario);
        }
        
        public System.Threading.Tasks.Task<ClienteGloomApp.ServicioGloom.Amistad[]> ObtenerSolicitudesDeAmistadPorJugadorAsync(string nombreUsuario) {
            return base.Channel.ObtenerSolicitudesDeAmistadPorJugadorAsync(nombreUsuario);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicioGloom.ISala", CallbackContract=typeof(ClienteGloomApp.ServicioGloom.ISalaCallback))]
    public interface ISala {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/AgregarParticipantesAPartida", ReplyAction="http://tempuri.org/ISala/AgregarParticipantesAPartidaResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClienteGloomApp.ServicioGloom.ManejadorExcepciones), Action="http://tempuri.org/ISala/AgregarParticipantesAPartidaManejadorExcepcionesFault", Name="ManejadorExcepciones", Namespace="http://schemas.datacontract.org/2004/07/BibliotecaClases")]
        int AgregarParticipantesAPartida(ClienteGloomApp.ServicioGloom.Sala sala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/AgregarParticipantesAPartida", ReplyAction="http://tempuri.org/ISala/AgregarParticipantesAPartidaResponse")]
        System.Threading.Tasks.Task<int> AgregarParticipantesAPartidaAsync(ClienteGloomApp.ServicioGloom.Sala sala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/CrearPartida", ReplyAction="http://tempuri.org/ISala/CrearPartidaResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClienteGloomApp.ServicioGloom.ManejadorExcepciones), Action="http://tempuri.org/ISala/CrearPartidaManejadorExcepcionesFault", Name="ManejadorExcepciones", Namespace="http://schemas.datacontract.org/2004/07/BibliotecaClases")]
        int CrearPartida(ClienteGloomApp.ServicioGloom.Sala sala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/CrearPartida", ReplyAction="http://tempuri.org/ISala/CrearPartidaResponse")]
        System.Threading.Tasks.Task<int> CrearPartidaAsync(ClienteGloomApp.ServicioGloom.Sala sala);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISala/ConectarConSala")]
        void ConectarConSala(string numeroSala, string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISala/ConectarConSala")]
        System.Threading.Tasks.Task ConectarConSalaAsync(string numeroSala, string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/ObtenerJugadoresConectados", ReplyAction="http://tempuri.org/ISala/ObtenerJugadoresConectadosResponse")]
        string[] ObtenerJugadoresConectados(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/ObtenerJugadoresConectados", ReplyAction="http://tempuri.org/ISala/ObtenerJugadoresConectadosResponse")]
        System.Threading.Tasks.Task<string[]> ObtenerJugadoresConectadosAsync(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/SeleccionarPersonaje", ReplyAction="http://tempuri.org/ISala/SeleccionarPersonajeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClienteGloomApp.ServicioGloom.ManejadorExcepciones), Action="http://tempuri.org/ISala/SeleccionarPersonajeManejadorExcepcionesFault", Name="ManejadorExcepciones", Namespace="http://schemas.datacontract.org/2004/07/BibliotecaClases")]
        void SeleccionarPersonaje(string nombreUsuario, string nombrePersonaje, string numeroSala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/SeleccionarPersonaje", ReplyAction="http://tempuri.org/ISala/SeleccionarPersonajeResponse")]
        System.Threading.Tasks.Task SeleccionarPersonajeAsync(string nombreUsuario, string nombrePersonaje, string numeroSala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/ValidarPersonajesSeleccionados", ReplyAction="http://tempuri.org/ISala/ValidarPersonajesSeleccionadosResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClienteGloomApp.ServicioGloom.ManejadorExcepciones), Action="http://tempuri.org/ISala/ValidarPersonajesSeleccionadosManejadorExcepcionesFault", Name="ManejadorExcepciones", Namespace="http://schemas.datacontract.org/2004/07/BibliotecaClases")]
        void ValidarPersonajesSeleccionados(string numeroSala, int cantidadJugadores);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/ValidarPersonajesSeleccionados", ReplyAction="http://tempuri.org/ISala/ValidarPersonajesSeleccionadosResponse")]
        System.Threading.Tasks.Task ValidarPersonajesSeleccionadosAsync(string numeroSala, int cantidadJugadores);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/SacarDeSala", ReplyAction="http://tempuri.org/ISala/SacarDeSalaResponse")]
        void SacarDeSala(string numeroSala, string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/SacarDeSala", ReplyAction="http://tempuri.org/ISala/SacarDeSalaResponse")]
        System.Threading.Tasks.Task SacarDeSalaAsync(string numeroSala, string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/EmpezarPartida", ReplyAction="http://tempuri.org/ISala/EmpezarPartidaResponse")]
        void EmpezarPartida(string idSala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/EmpezarPartida", ReplyAction="http://tempuri.org/ISala/EmpezarPartidaResponse")]
        System.Threading.Tasks.Task EmpezarPartidaAsync(string idSala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/ObtenerPersonajesUsados", ReplyAction="http://tempuri.org/ISala/ObtenerPersonajesUsadosResponse")]
        string[] ObtenerPersonajesUsados(string numeroSala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/ObtenerPersonajesUsados", ReplyAction="http://tempuri.org/ISala/ObtenerPersonajesUsadosResponse")]
        System.Threading.Tasks.Task<string[]> ObtenerPersonajesUsadosAsync(string numeroSala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/IngresarJugadorAJuego", ReplyAction="http://tempuri.org/ISala/IngresarJugadorAJuegoResponse")]
        void IngresarJugadorAJuego(string nombreUsuario, string numeroSala, int numeroJugadores);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/IngresarJugadorAJuego", ReplyAction="http://tempuri.org/ISala/IngresarJugadorAJuegoResponse")]
        System.Threading.Tasks.Task IngresarJugadorAJuegoAsync(string nombreUsuario, string numeroSala, int numeroJugadores);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISala/SacarATodosLosJugadoresDeSala")]
        void SacarATodosLosJugadoresDeSala(string numeroSala);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISala/SacarATodosLosJugadoresDeSala")]
        System.Threading.Tasks.Task SacarATodosLosJugadoresDeSalaAsync(string numeroSala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/ObtenerSalasActivas", ReplyAction="http://tempuri.org/ISala/ObtenerSalasActivasResponse")]
        ClienteGloomApp.ServicioGloom.Sala[] ObtenerSalasActivas();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/ObtenerSalasActivas", ReplyAction="http://tempuri.org/ISala/ObtenerSalasActivasResponse")]
        System.Threading.Tasks.Task<ClienteGloomApp.ServicioGloom.Sala[]> ObtenerSalasActivasAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/ObtenerSalasActivasConEstado", ReplyAction="http://tempuri.org/ISala/ObtenerSalasActivasConEstadoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClienteGloomApp.ServicioGloom.ManejadorExcepciones), Action="http://tempuri.org/ISala/ObtenerSalasActivasConEstadoManejadorExcepcionesFault", Name="ManejadorExcepciones", Namespace="http://schemas.datacontract.org/2004/07/BibliotecaClases")]
        ClienteGloomApp.ServicioGloom.Sala[] ObtenerSalasActivasConEstado();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/ObtenerSalasActivasConEstado", ReplyAction="http://tempuri.org/ISala/ObtenerSalasActivasConEstadoResponse")]
        System.Threading.Tasks.Task<ClienteGloomApp.ServicioGloom.Sala[]> ObtenerSalasActivasConEstadoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/UnirseASalaPublica", ReplyAction="http://tempuri.org/ISala/UnirseASalaPublicaResponse")]
        void UnirseASalaPublica(string idSala, string idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/UnirseASalaPublica", ReplyAction="http://tempuri.org/ISala/UnirseASalaPublicaResponse")]
        System.Threading.Tasks.Task UnirseASalaPublicaAsync(string idSala, string idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/UnirseASalaPrivada", ReplyAction="http://tempuri.org/ISala/UnirseASalaPrivadaResponse")]
        void UnirseASalaPrivada(string idUsuario, string idSala, string codigoAcceso);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/UnirseASalaPrivada", ReplyAction="http://tempuri.org/ISala/UnirseASalaPrivadaResponse")]
        System.Threading.Tasks.Task UnirseASalaPrivadaAsync(string idUsuario, string idSala, string codigoAcceso);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/SalirDeSala", ReplyAction="http://tempuri.org/ISala/SalirDeSalaResponse")]
        void SalirDeSala(string idSala, string idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/SalirDeSala", ReplyAction="http://tempuri.org/ISala/SalirDeSalaResponse")]
        System.Threading.Tasks.Task SalirDeSalaAsync(string idSala, string idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/ObtenerSalasActivas", ReplyAction="http://tempuri.org/ISala/ObtenerSalasActivasResponse")]
        ClienteGloomApp.ServicioGloom.Sala[] ObtenerSalasActivas();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/ObtenerSalasActivas", ReplyAction="http://tempuri.org/ISala/ObtenerSalasActivasResponse")]
        System.Threading.Tasks.Task<ClienteGloomApp.ServicioGloom.Sala[]> ObtenerSalasActivasAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/ObtenerSalasActivasConEstado", ReplyAction="http://tempuri.org/ISala/ObtenerSalasActivasConEstadoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClienteGloomApp.ServicioGloom.ManejadorExcepciones), Action="http://tempuri.org/ISala/ObtenerSalasActivasConEstadoManejadorExcepcionesFault", Name="ManejadorExcepciones", Namespace="http://schemas.datacontract.org/2004/07/BibliotecaClases")]
        ClienteGloomApp.ServicioGloom.Sala[] ObtenerSalasActivasConEstado();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/ObtenerSalasActivasConEstado", ReplyAction="http://tempuri.org/ISala/ObtenerSalasActivasConEstadoResponse")]
        System.Threading.Tasks.Task<ClienteGloomApp.ServicioGloom.Sala[]> ObtenerSalasActivasConEstadoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/UnirseASalaPublicaNormal", ReplyAction="http://tempuri.org/ISala/UnirseASalaPublicaNormalResponse")]
        void UnirseASalaPublicaNormal(string idSala, string idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/UnirseASalaPublicaNormal", ReplyAction="http://tempuri.org/ISala/UnirseASalaPublicaNormalResponse")]
        System.Threading.Tasks.Task UnirseASalaPublicaNormalAsync(string idSala, string idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/UnirseASalaPrivadaNormal", ReplyAction="http://tempuri.org/ISala/UnirseASalaPrivadaNormalResponse")]
        void UnirseASalaPrivadaNormal(string idUsuario, string idSala, string codigoAcceso);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/UnirseASalaPrivadaNormal", ReplyAction="http://tempuri.org/ISala/UnirseASalaPrivadaNormalResponse")]
        System.Threading.Tasks.Task UnirseASalaPrivadaNormalAsync(string idUsuario, string idSala, string codigoAcceso);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/UnirseASalaPrivadaMiniHistoria", ReplyAction="http://tempuri.org/ISala/UnirseASalaPrivadaMiniHistoriaResponse")]
        void UnirseASalaPrivadaMiniHistoria(string idUsuario, string idSala, string codigoAcceso);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/UnirseASalaPrivadaMiniHistoria", ReplyAction="http://tempuri.org/ISala/UnirseASalaPrivadaMiniHistoriaResponse")]
        System.Threading.Tasks.Task UnirseASalaPrivadaMiniHistoriaAsync(string idUsuario, string idSala, string codigoAcceso);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/SalirDeSala", ReplyAction="http://tempuri.org/ISala/SalirDeSalaResponse")]
        void SalirDeSala(string idSala, string idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/SalirDeSala", ReplyAction="http://tempuri.org/ISala/SalirDeSalaResponse")]
        System.Threading.Tasks.Task SalirDeSalaAsync(string idSala, string idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/ObtenerCodigoSala", ReplyAction="http://tempuri.org/ISala/ObtenerCodigoSalaResponse")]
        string ObtenerCodigoSala(string idAdminsitrador, string nombreSala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/ObtenerCodigoSala", ReplyAction="http://tempuri.org/ISala/ObtenerCodigoSalaResponse")]
        System.Threading.Tasks.Task<string> ObtenerCodigoSalaAsync(string idAdminsitrador, string nombreSala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/ObtenerFamiliaSeleccionada", ReplyAction="http://tempuri.org/ISala/ObtenerFamiliaSeleccionadaResponse")]
        string[] ObtenerFamiliaSeleccionada(string idSala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/ObtenerFamiliaSeleccionada", ReplyAction="http://tempuri.org/ISala/ObtenerFamiliaSeleccionadaResponse")]
        System.Threading.Tasks.Task<string[]> ObtenerFamiliaSeleccionadaAsync(string idSala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/SeleccionarFamilia", ReplyAction="http://tempuri.org/ISala/SeleccionarFamiliaResponse")]
        void SeleccionarFamilia(string nombreUsuario, string nombreFamilia, string salaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/SeleccionarFamilia", ReplyAction="http://tempuri.org/ISala/SeleccionarFamiliaResponse")]
        System.Threading.Tasks.Task SeleccionarFamiliaAsync(string nombreUsuario, string nombreFamilia, string salaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/ValidarFamiliaSeleccionada", ReplyAction="http://tempuri.org/ISala/ValidarFamiliaSeleccionadaResponse")]
        void ValidarFamiliaSeleccionada(int cantidadJugadores, string idSala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/ValidarFamiliaSeleccionada", ReplyAction="http://tempuri.org/ISala/ValidarFamiliaSeleccionadaResponse")]
        System.Threading.Tasks.Task ValidarFamiliaSeleccionadaAsync(int cantidadJugadores, string idSala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/ObtenerFamiliasSeleccionadasPorSala", ReplyAction="http://tempuri.org/ISala/ObtenerFamiliasSeleccionadasPorSalaResponse")]
        System.Collections.Generic.Dictionary<string, string[]> ObtenerFamiliasSeleccionadasPorSala();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/ObtenerFamiliasSeleccionadasPorSala", ReplyAction="http://tempuri.org/ISala/ObtenerFamiliasSeleccionadasPorSalaResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string[]>> ObtenerFamiliasSeleccionadasPorSalaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/CambiarEstadoParaPartida", ReplyAction="http://tempuri.org/ISala/CambiarEstadoParaPartidaResponse")]
        void CambiarEstadoParaPartida(string numeroSala, string ganador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISala/CambiarEstadoParaPartida", ReplyAction="http://tempuri.org/ISala/CambiarEstadoParaPartidaResponse")]
        System.Threading.Tasks.Task CambiarEstadoParaPartidaAsync(string numeroSala, string ganador);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISalaCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISala/EmpezarJuego")]
        void EmpezarJuego();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISala/ActualizarNumeroJugadores")]
        void ActualizarNumeroJugadores();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISala/ActualizarImagenPersonaje")]
        void ActualizarImagenPersonaje(string personaje, string personajeAnterior);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISala/SacarDeSalaATodosJugadores")]
        void SacarDeSalaATodosJugadores();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISala/ActualizarSalasActivas")]
        void ActualizarSalasActivas(ClienteGloomApp.ServicioGloom.Sala[] salasActivas);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISala/ResultadoUnirseASala")]
        void ResultadoUnirseASala(string idSala, string codigo, bool esExitoso);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISalaChannel : ClienteGloomApp.ServicioGloom.ISala, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SalaClient : System.ServiceModel.DuplexClientBase<ClienteGloomApp.ServicioGloom.ISala>, ClienteGloomApp.ServicioGloom.ISala {
        
        public SalaClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public SalaClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public SalaClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public SalaClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public SalaClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public int AgregarParticipantesAPartida(ClienteGloomApp.ServicioGloom.Sala sala) {
            return base.Channel.AgregarParticipantesAPartida(sala);
        }
        
        public System.Threading.Tasks.Task<int> AgregarParticipantesAPartidaAsync(ClienteGloomApp.ServicioGloom.Sala sala) {
            return base.Channel.AgregarParticipantesAPartidaAsync(sala);
        }
        
        public int CrearPartida(ClienteGloomApp.ServicioGloom.Sala sala) {
            return base.Channel.CrearPartida(sala);
        }
        
        public System.Threading.Tasks.Task<int> CrearPartidaAsync(ClienteGloomApp.ServicioGloom.Sala sala) {
            return base.Channel.CrearPartidaAsync(sala);
        }
        
        public void ConectarConSala(string numeroSala, string nombreUsuario) {
            base.Channel.ConectarConSala(numeroSala, nombreUsuario);
        }
        
        public System.Threading.Tasks.Task ConectarConSalaAsync(string numeroSala, string nombreUsuario) {
            return base.Channel.ConectarConSalaAsync(numeroSala, nombreUsuario);
        }
        
        public string[] ObtenerJugadoresConectados(string nombreUsuario) {
            return base.Channel.ObtenerJugadoresConectados(nombreUsuario);
        }
        
        public System.Threading.Tasks.Task<string[]> ObtenerJugadoresConectadosAsync(string nombreUsuario) {
            return base.Channel.ObtenerJugadoresConectadosAsync(nombreUsuario);
        }
        
        public void SeleccionarPersonaje(string nombreUsuario, string nombrePersonaje, string numeroSala) {
            base.Channel.SeleccionarPersonaje(nombreUsuario, nombrePersonaje, numeroSala);
        }
        
        public System.Threading.Tasks.Task SeleccionarPersonajeAsync(string nombreUsuario, string nombrePersonaje, string numeroSala) {
            return base.Channel.SeleccionarPersonajeAsync(nombreUsuario, nombrePersonaje, numeroSala);
        }
        
        public void ValidarPersonajesSeleccionados(string numeroSala, int cantidadJugadores) {
            base.Channel.ValidarPersonajesSeleccionados(numeroSala, cantidadJugadores);
        }
        
        public System.Threading.Tasks.Task ValidarPersonajesSeleccionadosAsync(string numeroSala, int cantidadJugadores) {
            return base.Channel.ValidarPersonajesSeleccionadosAsync(numeroSala, cantidadJugadores);
        }
        
        public void SacarDeSala(string numeroSala, string nombreUsuario) {
            base.Channel.SacarDeSala(numeroSala, nombreUsuario);
        }
        
        public System.Threading.Tasks.Task SacarDeSalaAsync(string numeroSala, string nombreUsuario) {
            return base.Channel.SacarDeSalaAsync(numeroSala, nombreUsuario);
        }
        
        public void EmpezarPartida(string idSala) {
            base.Channel.EmpezarPartida(idSala);
        }
        
        public System.Threading.Tasks.Task EmpezarPartidaAsync(string idSala) {
            return base.Channel.EmpezarPartidaAsync(idSala);
        }
        
        public string[] ObtenerPersonajesUsados(string numeroSala) {
            return base.Channel.ObtenerPersonajesUsados(numeroSala);
        }
        
        public System.Threading.Tasks.Task<string[]> ObtenerPersonajesUsadosAsync(string numeroSala) {
            return base.Channel.ObtenerPersonajesUsadosAsync(numeroSala);
        }
        
        public void IngresarJugadorAJuego(string nombreUsuario, string numeroSala, int numeroJugadores) {
            base.Channel.IngresarJugadorAJuego(nombreUsuario, numeroSala, numeroJugadores);
        }
        
        public System.Threading.Tasks.Task IngresarJugadorAJuegoAsync(string nombreUsuario, string numeroSala, int numeroJugadores) {
            return base.Channel.IngresarJugadorAJuegoAsync(nombreUsuario, numeroSala, numeroJugadores);
        }
        
        public void SacarATodosLosJugadoresDeSala(string numeroSala) {
            base.Channel.SacarATodosLosJugadoresDeSala(numeroSala);
        }
        
        public System.Threading.Tasks.Task SacarATodosLosJugadoresDeSalaAsync(string numeroSala) {
            return base.Channel.SacarATodosLosJugadoresDeSalaAsync(numeroSala);
        }
        
        public ClienteGloomApp.ServicioGloom.Sala[] ObtenerSalasActivas() {
            return base.Channel.ObtenerSalasActivas();
        }
        
        public System.Threading.Tasks.Task<ClienteGloomApp.ServicioGloom.Sala[]> ObtenerSalasActivasAsync() {
            return base.Channel.ObtenerSalasActivasAsync();
        }
        
        public ClienteGloomApp.ServicioGloom.Sala[] ObtenerSalasActivasConEstado() {
            return base.Channel.ObtenerSalasActivasConEstado();
        }
        
        public System.Threading.Tasks.Task<ClienteGloomApp.ServicioGloom.Sala[]> ObtenerSalasActivasConEstadoAsync() {
            return base.Channel.ObtenerSalasActivasConEstadoAsync();
        }
        
        public void UnirseASalaPublica(string idSala, string idUsuario) {
            base.Channel.UnirseASalaPublica(idSala, idUsuario);
        }
        
        public System.Threading.Tasks.Task UnirseASalaPublicaAsync(string idSala, string idUsuario) {
            return base.Channel.UnirseASalaPublicaAsync(idSala, idUsuario);
        }
        
        public void UnirseASalaPrivada(string idUsuario, string idSala, string codigoAcceso) {
            base.Channel.UnirseASalaPrivada(idUsuario, idSala, codigoAcceso);
        }
        
        public System.Threading.Tasks.Task UnirseASalaPrivadaAsync(string idUsuario, string idSala, string codigoAcceso) {
            return base.Channel.UnirseASalaPrivadaAsync(idUsuario, idSala, codigoAcceso);
        }
        
        public void SalirDeSala(string idSala, string idUsuario) {
            base.Channel.SalirDeSala(idSala, idUsuario);
        }
        
        public System.Threading.Tasks.Task SalirDeSalaAsync(string idSala, string idUsuario) {
            return base.Channel.SalirDeSalaAsync(idSala, idUsuario);
        }
        
        public void UnirseASalaPrivadaMiniHistoria(string idUsuario, string idSala, string codigoAcceso) {
            base.Channel.UnirseASalaPrivadaMiniHistoria(idUsuario, idSala, codigoAcceso);
        }
        
        public System.Threading.Tasks.Task UnirseASalaPrivadaMiniHistoriaAsync(string idUsuario, string idSala, string codigoAcceso) {
            return base.Channel.UnirseASalaPrivadaMiniHistoriaAsync(idUsuario, idSala, codigoAcceso);
        }
        
        public string ObtenerCodigoSala(string idAdminsitrador, string nombreSala) {
            return base.Channel.ObtenerCodigoSala(idAdminsitrador, nombreSala);
        }
        
        public System.Threading.Tasks.Task<string> ObtenerCodigoSalaAsync(string idAdminsitrador, string nombreSala) {
            return base.Channel.ObtenerCodigoSalaAsync(idAdminsitrador, nombreSala);
        }
        
        public string[] ObtenerFamiliaSeleccionada(string idSala) {
            return base.Channel.ObtenerFamiliaSeleccionada(idSala);
        }
        
        public System.Threading.Tasks.Task<string[]> ObtenerFamiliaSeleccionadaAsync(string idSala) {
            return base.Channel.ObtenerFamiliaSeleccionadaAsync(idSala);
        }
        
        public void SeleccionarFamilia(string nombreUsuario, string nombreFamilia, string salaId) {
            base.Channel.SeleccionarFamilia(nombreUsuario, nombreFamilia, salaId);
        }
        
        public System.Threading.Tasks.Task SeleccionarFamiliaAsync(string nombreUsuario, string nombreFamilia, string salaId) {
            return base.Channel.SeleccionarFamiliaAsync(nombreUsuario, nombreFamilia, salaId);
        }
        
        public void ValidarFamiliaSeleccionada(int cantidadJugadores, string idSala) {
            base.Channel.ValidarFamiliaSeleccionada(cantidadJugadores, idSala);
        }
        
        public System.Threading.Tasks.Task ValidarFamiliaSeleccionadaAsync(int cantidadJugadores, string idSala) {
            return base.Channel.ValidarFamiliaSeleccionadaAsync(cantidadJugadores, idSala);
        }
        
        public System.Collections.Generic.Dictionary<string, string[]> ObtenerFamiliasSeleccionadasPorSala() {
            return base.Channel.ObtenerFamiliasSeleccionadasPorSala();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string[]>> ObtenerFamiliasSeleccionadasPorSalaAsync() {
            return base.Channel.ObtenerFamiliasSeleccionadasPorSalaAsync();
        }
        
        public void CambiarEstadoParaPartida(string numeroSala, string ganador) {
            base.Channel.CambiarEstadoParaPartida(numeroSala, ganador);
        }
        
        public System.Threading.Tasks.Task CambiarEstadoParaPartidaAsync(string numeroSala, string ganador) {
            return base.Channel.CambiarEstadoParaPartidaAsync(numeroSala, ganador);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicioGloom.IServicioJuegoTablero", CallbackContract=typeof(ClienteGloomApp.ServicioGloom.IServicioJuegoTableroCallback))]
    public interface IServicioJuegoTablero {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioJuegoTablero/ObtenerCartasSobrantes", ReplyAction="http://tempuri.org/IServicioJuegoTablero/ObtenerCartasSobrantesResponse")]
        ClienteGloomApp.ServicioGloom.Carta[] ObtenerCartasSobrantes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioJuegoTablero/ObtenerCartasSobrantes", ReplyAction="http://tempuri.org/IServicioJuegoTablero/ObtenerCartasSobrantesResponse")]
        System.Threading.Tasks.Task<ClienteGloomApp.ServicioGloom.Carta[]> ObtenerCartasSobrantesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioJuegoTablero/IniciarPartidaPorAdministrador", ReplyAction="http://tempuri.org/IServicioJuegoTablero/IniciarPartidaPorAdministradorResponse")]
        void IniciarPartidaPorAdministrador(string nombreAdministrador, string numeroSala, int numeroJugadores);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioJuegoTablero/IniciarPartidaPorAdministrador", ReplyAction="http://tempuri.org/IServicioJuegoTablero/IniciarPartidaPorAdministradorResponse")]
        System.Threading.Tasks.Task IniciarPartidaPorAdministradorAsync(string nombreAdministrador, string numeroSala, int numeroJugadores);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioJuegoTablero/EliminarJugadorDeJuego", ReplyAction="http://tempuri.org/IServicioJuegoTablero/EliminarJugadorDeJuegoResponse")]
        void EliminarJugadorDeJuego(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioJuegoTablero/EliminarJugadorDeJuego", ReplyAction="http://tempuri.org/IServicioJuegoTablero/EliminarJugadorDeJuegoResponse")]
        System.Threading.Tasks.Task EliminarJugadorDeJuegoAsync(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioJuegoTablero/CambiarTurno", ReplyAction="http://tempuri.org/IServicioJuegoTablero/CambiarTurnoResponse")]
        void CambiarTurno(string numeroSala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioJuegoTablero/CambiarTurno", ReplyAction="http://tempuri.org/IServicioJuegoTablero/CambiarTurnoResponse")]
        System.Threading.Tasks.Task CambiarTurnoAsync(string numeroSala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioJuegoTablero/AsignarPrimerTurno", ReplyAction="http://tempuri.org/IServicioJuegoTablero/AsignarPrimerTurnoResponse")]
        string AsignarPrimerTurno(string numeroSala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioJuegoTablero/AsignarPrimerTurno", ReplyAction="http://tempuri.org/IServicioJuegoTablero/AsignarPrimerTurnoResponse")]
        System.Threading.Tasks.Task<string> AsignarPrimerTurnoAsync(string numeroSala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioJuegoTablero/ObtenerJugadorActual", ReplyAction="http://tempuri.org/IServicioJuegoTablero/ObtenerJugadorActualResponse")]
        string ObtenerJugadorActual(string numeroSala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioJuegoTablero/ObtenerJugadorActual", ReplyAction="http://tempuri.org/IServicioJuegoTablero/ObtenerJugadorActualResponse")]
        System.Threading.Tasks.Task<string> ObtenerJugadorActualAsync(string numeroSala);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioJuegoTablero/ConectarConTablero")]
        void ConectarConTablero(string nombreUsuario, string numeroSala);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioJuegoTablero/ConectarConTablero")]
        System.Threading.Tasks.Task ConectarConTableroAsync(string nombreUsuario, string numeroSala);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioJuegoTablero/SumarVidaPersonaje")]
        void SumarVidaPersonaje(string numeroSala, string nombreUsuario, int cantidadVida);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioJuegoTablero/SumarVidaPersonaje")]
        System.Threading.Tasks.Task SumarVidaPersonajeAsync(string numeroSala, string nombreUsuario, int cantidadVida);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioJuegoTablero/AgregarCastigo")]
        void AgregarCastigo(string nombreJugador);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioJuegoTablero/AgregarCastigo")]
        System.Threading.Tasks.Task AgregarCastigoAsync(string nombreJugador);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioJuegoTablero/MatarJugador")]
        void MatarJugador(string numeroSala, string jugadorAMatar, string jugadorPropietario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioJuegoTablero/MatarJugador")]
        System.Threading.Tasks.Task MatarJugadorAsync(string numeroSala, string jugadorAMatar, string jugadorPropietario);
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioJuegoTablero/TerminarPartidaMiniJuego")]
        System.Threading.Tasks.Task TerminarPartidaMiniJuegoAsync(string numeroSala);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioJuegoTablero/AplicarModificadorPositivo")]
        void AplicarModificadorPositivo(ClienteGloomApp.ServicioGloom.Carta carta, string usuarioObjetivo, string personajeObjetivo);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioJuegoTablero/AplicarModificadorPositivo")]
        System.Threading.Tasks.Task AplicarModificadorPositivoAsync(ClienteGloomApp.ServicioGloom.Carta carta, string usuarioObjetivo, string personajeObjetivo);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioJuegoTablero/AplicarModificadorNegativo")]
        void AplicarModificadorNegativo(ClienteGloomApp.ServicioGloom.Carta carta, string nombreUsuario, string personajeObjetivo);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioJuegoTablero/AplicarModificadorNegativo")]
        System.Threading.Tasks.Task AplicarModificadorNegativoAsync(ClienteGloomApp.ServicioGloom.Carta carta, string nombreUsuario, string personajeObjetivo);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioJuegoTablero/AplicarCartaMuerte")]
        void AplicarCartaMuerte(string numeroSala, string nombreUsuario, string personajeObjetivo);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioJuegoTablero/AplicarCartaMuerte")]
        System.Threading.Tasks.Task AplicarCartaMuerteAsync(string numeroSala, string nombreUsuario, string personajeObjetivo);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioJuegoTablero/SolicitarExpulsion")]
        void SolicitarExpulsion(string solicitante, string jugadorObjetivo, string numeroSala);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioJuegoTablero/SolicitarExpulsion")]
        System.Threading.Tasks.Task SolicitarExpulsionAsync(string solicitante, string jugadorObjetivo, string numeroSala);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioJuegoTablero/TerminarPartidaNormal")]
        void TerminarPartidaNormal(string numeroSala);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioJuegoTablero/TerminarPartidaNormal")]
        System.Threading.Tasks.Task TerminarPartidaNormalAsync(string numeroSala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioJuegoTablero/EsSalaActiva", ReplyAction="http://tempuri.org/IServicioJuegoTablero/EsSalaActivaResponse")]
        bool EsSalaActiva(string numeroSala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioJuegoTablero/EsSalaActiva", ReplyAction="http://tempuri.org/IServicioJuegoTablero/EsSalaActivaResponse")]
        System.Threading.Tasks.Task<bool> EsSalaActivaAsync(string numeroSala);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioJuegoTablero/IncrementarTurnos")]
        void IncrementarTurnos(string numeroSala);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioJuegoTablero/IncrementarTurnos")]
        System.Threading.Tasks.Task IncrementarTurnosAsync(string numeroSala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioJuegoTablero/ObtenerResumenFamiliasPorSala", ReplyAction="http://tempuri.org/IServicioJuegoTablero/ObtenerResumenFamiliasPorSalaResponse")]
        System.Collections.Generic.Dictionary<string, System.ValueTuple<string, int>> ObtenerResumenFamiliasPorSala(string numeroSala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioJuegoTablero/ObtenerResumenFamiliasPorSala", ReplyAction="http://tempuri.org/IServicioJuegoTablero/ObtenerResumenFamiliasPorSalaResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, System.ValueTuple<string, int>>> ObtenerResumenFamiliasPorSalaAsync(string numeroSala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioJuegoTablero/BorrarEstructurasPorSala", ReplyAction="http://tempuri.org/IServicioJuegoTablero/BorrarEstructurasPorSalaResponse")]
        void BorrarEstructurasPorSala(string numeroSala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioJuegoTablero/BorrarEstructurasPorSala", ReplyAction="http://tempuri.org/IServicioJuegoTablero/BorrarEstructurasPorSalaResponse")]
        System.Threading.Tasks.Task BorrarEstructurasPorSalaAsync(string numeroSala);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicioJuegoTableroCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioJuegoTablero/EnviarTurno")]
        void EnviarTurno(string nombreDelUsuarioEnTurno);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioJuegoTablero/ActualizarTurno")]
        void ActualizarTurno(string nombreDelUsuarioEnTurno);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioJuegoTablero/ActualizarImagenMazoCartaSobrante")]
        void ActualizarImagenMazoCartaSobrante();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioJuegoTablero/ActualizarImagenMazoCartaBonus")]
        void ActualizarImagenMazoCartaBonus();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioJuegoTablero/ActualizarMazoJugador")]
        void ActualizarMazoJugador();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioJuegoTablero/EnviarGanador")]
        void EnviarGanador(string jugador);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioJuegoTablero/NotificarExpulsion")]
        void NotificarExpulsion(string jugadorExpulsado);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioJuegoTablero/IniciarVotacion")]
        void IniciarVotacion(string jugadorObjetivo);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioJuegoTablero/ActualizarJugadorMuerto")]
        void ActualizarJugadorMuerto(string jugadorMuerto);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioJuegoTablero/NotificarVotacionExpulsion")]
        void NotificarVotacionExpulsion(string jugadorPropuesto);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioJuegoTablero/RecibirExpulsion")]
        void RecibirExpulsion(string jugadorObjetivo);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioJuegoTablero/ActualizarInterfazExpulsion")]
        void ActualizarInterfazExpulsion(string jugadorExpulsado);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicioJuegoTableroChannel : ClienteGloomApp.ServicioGloom.IServicioJuegoTablero, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicioJuegoTableroClient : System.ServiceModel.DuplexClientBase<ClienteGloomApp.ServicioGloom.IServicioJuegoTablero>, ClienteGloomApp.ServicioGloom.IServicioJuegoTablero {
        
        public ServicioJuegoTableroClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ServicioJuegoTableroClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ServicioJuegoTableroClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioJuegoTableroClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioJuegoTableroClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public ClienteGloomApp.ServicioGloom.Carta[] ObtenerCartasSobrantes() {
            return base.Channel.ObtenerCartasSobrantes();
        }
        
        public System.Threading.Tasks.Task<ClienteGloomApp.ServicioGloom.Carta[]> ObtenerCartasSobrantesAsync() {
            return base.Channel.ObtenerCartasSobrantesAsync();
        }
        
        public void IniciarPartidaPorAdministrador(string nombreAdministrador, string numeroSala, int numeroJugadores) {
            base.Channel.IniciarPartidaPorAdministrador(nombreAdministrador, numeroSala, numeroJugadores);
        }
        
        public System.Threading.Tasks.Task IniciarPartidaPorAdministradorAsync(string nombreAdministrador, string numeroSala, int numeroJugadores) {
            return base.Channel.IniciarPartidaPorAdministradorAsync(nombreAdministrador, numeroSala, numeroJugadores);
        }
        
        public void EliminarJugadorDeJuego(string nombreUsuario) {
            base.Channel.EliminarJugadorDeJuego(nombreUsuario);
        }
        
        public System.Threading.Tasks.Task EliminarJugadorDeJuegoAsync(string nombreUsuario) {
            return base.Channel.EliminarJugadorDeJuegoAsync(nombreUsuario);
        }
        
        public void CambiarTurno(string numeroSala) {
            base.Channel.CambiarTurno(numeroSala);
        }
        
        public System.Threading.Tasks.Task CambiarTurnoAsync(string numeroSala) {
            return base.Channel.CambiarTurnoAsync(numeroSala);
        }
        
        public string AsignarPrimerTurno(string numeroSala) {
            return base.Channel.AsignarPrimerTurno(numeroSala);
        }
        
        public System.Threading.Tasks.Task<string> AsignarPrimerTurnoAsync(string numeroSala) {
            return base.Channel.AsignarPrimerTurnoAsync(numeroSala);
        }
        
        public string ObtenerJugadorActual(string numeroSala) {
            return base.Channel.ObtenerJugadorActual(numeroSala);
        }
        
        public System.Threading.Tasks.Task<string> ObtenerJugadorActualAsync(string numeroSala) {
            return base.Channel.ObtenerJugadorActualAsync(numeroSala);
        }
        
        public void ConectarConTablero(string nombreUsuario, string numeroSala) {
            base.Channel.ConectarConTablero(nombreUsuario, numeroSala);
        }
        
        public System.Threading.Tasks.Task ConectarConTableroAsync(string nombreUsuario, string numeroSala) {
            return base.Channel.ConectarConTableroAsync(nombreUsuario, numeroSala);
        }
        
        public void SumarVidaPersonaje(string numeroSala, string nombreUsuario, int cantidadVida) {
            base.Channel.SumarVidaPersonaje(numeroSala, nombreUsuario, cantidadVida);
        }
        
        public System.Threading.Tasks.Task SumarVidaPersonajeAsync(string numeroSala, string nombreUsuario, int cantidadVida) {
            return base.Channel.SumarVidaPersonajeAsync(numeroSala, nombreUsuario, cantidadVida);
        }
        
        public void AgregarCastigo(string nombreJugador) {
            base.Channel.AgregarCastigo(nombreJugador);
        }
        
        public System.Threading.Tasks.Task AgregarCastigoAsync(string nombreJugador) {
            return base.Channel.AgregarCastigoAsync(nombreJugador);
        }
        
        public void MatarJugador(string numeroSala, string jugadorAMatar, string jugadorPropietario) {
            base.Channel.MatarJugador(numeroSala, jugadorAMatar, jugadorPropietario);
        }
        
        public System.Threading.Tasks.Task MatarJugadorAsync(string numeroSala, string jugadorAMatar, string jugadorPropietario) {
            return base.Channel.MatarJugadorAsync(numeroSala, jugadorAMatar, jugadorPropietario);
        }
        
        public void AplicarModificadorPositivo(ClienteGloomApp.ServicioGloom.Carta carta, string usuarioObjetivo, string personajeObjetivo) {
            base.Channel.AplicarModificadorPositivo(carta, usuarioObjetivo, personajeObjetivo);
        }
        
        public System.Threading.Tasks.Task AplicarModificadorPositivoAsync(ClienteGloomApp.ServicioGloom.Carta carta, string usuarioObjetivo, string personajeObjetivo) {
            return base.Channel.AplicarModificadorPositivoAsync(carta, usuarioObjetivo, personajeObjetivo);
        }
        
        public void AplicarModificadorNegativo(ClienteGloomApp.ServicioGloom.Carta carta, string nombreUsuario, string personajeObjetivo) {
            base.Channel.AplicarModificadorNegativo(carta, nombreUsuario, personajeObjetivo);
        }
        
        public System.Threading.Tasks.Task AplicarModificadorNegativoAsync(ClienteGloomApp.ServicioGloom.Carta carta, string nombreUsuario, string personajeObjetivo) {
            return base.Channel.AplicarModificadorNegativoAsync(carta, nombreUsuario, personajeObjetivo);
        }
        
        public void AplicarCartaMuerte(string numeroSala, string nombreUsuario, string personajeObjetivo) {
            base.Channel.AplicarCartaMuerte(numeroSala, nombreUsuario, personajeObjetivo);
        }
        
        public System.Threading.Tasks.Task AplicarCartaMuerteAsync(string numeroSala, string nombreUsuario, string personajeObjetivo) {
            return base.Channel.AplicarCartaMuerteAsync(numeroSala, nombreUsuario, personajeObjetivo);
        }
        
        public void SolicitarExpulsion(string solicitante, string jugadorObjetivo, string numeroSala) {
            base.Channel.SolicitarExpulsion(solicitante, jugadorObjetivo, numeroSala);
        }
        
        public System.Threading.Tasks.Task SolicitarExpulsionAsync(string solicitante, string jugadorObjetivo, string numeroSala) {
            return base.Channel.SolicitarExpulsionAsync(solicitante, jugadorObjetivo, numeroSala);
        }
        
        public void TerminarPartidaNormal(string numeroSala) {
            base.Channel.TerminarPartidaNormal(numeroSala);
        }
        
        public System.Threading.Tasks.Task TerminarPartidaNormalAsync(string numeroSala) {
            return base.Channel.TerminarPartidaNormalAsync(numeroSala);
        }
        
        public bool EsSalaActiva(string numeroSala) {
            return base.Channel.EsSalaActiva(numeroSala);
        }
        
        public System.Threading.Tasks.Task<bool> EsSalaActivaAsync(string numeroSala) {
            return base.Channel.EsSalaActivaAsync(numeroSala);
        }
        
        public void IncrementarTurnos(string numeroSala) {
            base.Channel.IncrementarTurnos(numeroSala);
        }
        
        public System.Threading.Tasks.Task IncrementarTurnosAsync(string numeroSala) {
            return base.Channel.IncrementarTurnosAsync(numeroSala);
        }
        
        public System.Collections.Generic.Dictionary<string, System.ValueTuple<string, int>> ObtenerResumenFamiliasPorSala(string numeroSala) {
            return base.Channel.ObtenerResumenFamiliasPorSala(numeroSala);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, System.ValueTuple<string, int>>> ObtenerResumenFamiliasPorSalaAsync(string numeroSala) {
            return base.Channel.ObtenerResumenFamiliasPorSalaAsync(numeroSala);
        }
        
        public void BorrarEstructurasPorSala(string numeroSala) {
            base.Channel.BorrarEstructurasPorSala(numeroSala);
        }
        
        public System.Threading.Tasks.Task BorrarEstructurasPorSalaAsync(string numeroSala) {
            return base.Channel.BorrarEstructurasPorSalaAsync(numeroSala);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicioGloom.IServicioCarta", CallbackContract=typeof(ClienteGloomApp.ServicioGloom.IServicioCartaCallback))]
    public interface IServicioCarta {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioCarta/ObtenerMazoJugador", ReplyAction="http://tempuri.org/IServicioCarta/ObtenerMazoJugadorResponse")]
        ClienteGloomApp.ServicioGloom.Carta[] ObtenerMazoJugador(string nombreJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioCarta/ObtenerMazoJugador", ReplyAction="http://tempuri.org/IServicioCarta/ObtenerMazoJugadorResponse")]
        System.Threading.Tasks.Task<ClienteGloomApp.ServicioGloom.Carta[]> ObtenerMazoJugadorAsync(string nombreJugador);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioCarta/AgregarCartaAMazoJugador")]
        void AgregarCartaAMazoJugador(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioCarta/AgregarCartaAMazoJugador")]
        System.Threading.Tasks.Task AgregarCartaAMazoJugadorAsync(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioCarta/QuitarCartaDeMazoJugador")]
        void QuitarCartaDeMazoJugador(string nombreUsuario, ClienteGloomApp.ServicioGloom.Carta cartaAEliminar);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioCarta/QuitarCartaDeMazoJugador")]
        System.Threading.Tasks.Task QuitarCartaDeMazoJugadorAsync(string nombreUsuario, ClienteGloomApp.ServicioGloom.Carta cartaAEliminar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioCarta/ObtenerCartasBonus", ReplyAction="http://tempuri.org/IServicioCarta/ObtenerCartasBonusResponse")]
        ClienteGloomApp.ServicioGloom.Carta ObtenerCartasBonus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioCarta/ObtenerCartasBonus", ReplyAction="http://tempuri.org/IServicioCarta/ObtenerCartasBonusResponse")]
        System.Threading.Tasks.Task<ClienteGloomApp.ServicioGloom.Carta> ObtenerCartasBonusAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioCarta/QuitarCartaDeMazoJugadorExterno")]
        void QuitarCartaDeMazoJugadorExterno(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioCarta/QuitarCartaDeMazoJugadorExterno")]
        System.Threading.Tasks.Task QuitarCartaDeMazoJugadorExternoAsync(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioCarta/ObtenerMazoRestante", ReplyAction="http://tempuri.org/IServicioCarta/ObtenerMazoRestanteResponse")]
        ClienteGloomApp.ServicioGloom.Carta[] ObtenerMazoRestante();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioCarta/ObtenerMazoRestante", ReplyAction="http://tempuri.org/IServicioCarta/ObtenerMazoRestanteResponse")]
        System.Threading.Tasks.Task<ClienteGloomApp.ServicioGloom.Carta[]> ObtenerMazoRestanteAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicioCartaCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioCarta/NotificarActualizacion")]
        void NotificarActualizacion(string mensaje);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicioCartaChannel : ClienteGloomApp.ServicioGloom.IServicioCarta, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicioCartaClient : System.ServiceModel.DuplexClientBase<ClienteGloomApp.ServicioGloom.IServicioCarta>, ClienteGloomApp.ServicioGloom.IServicioCarta {
        
        public ServicioCartaClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ServicioCartaClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ServicioCartaClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioCartaClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioCartaClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public ClienteGloomApp.ServicioGloom.Carta[] ObtenerMazoJugador(string nombreJugador) {
            return base.Channel.ObtenerMazoJugador(nombreJugador);
        }
        
        public System.Threading.Tasks.Task<ClienteGloomApp.ServicioGloom.Carta[]> ObtenerMazoJugadorAsync(string nombreJugador) {
            return base.Channel.ObtenerMazoJugadorAsync(nombreJugador);
        }
        
        public void AgregarCartaAMazoJugador(string nombreUsuario) {
            base.Channel.AgregarCartaAMazoJugador(nombreUsuario);
        }
        
        public System.Threading.Tasks.Task AgregarCartaAMazoJugadorAsync(string nombreUsuario) {
            return base.Channel.AgregarCartaAMazoJugadorAsync(nombreUsuario);
        }
        
        public void QuitarCartaDeMazoJugador(string nombreUsuario, ClienteGloomApp.ServicioGloom.Carta cartaAEliminar) {
            base.Channel.QuitarCartaDeMazoJugador(nombreUsuario, cartaAEliminar);
        }
        
        public System.Threading.Tasks.Task QuitarCartaDeMazoJugadorAsync(string nombreUsuario, ClienteGloomApp.ServicioGloom.Carta cartaAEliminar) {
            return base.Channel.QuitarCartaDeMazoJugadorAsync(nombreUsuario, cartaAEliminar);
        }
        
        public ClienteGloomApp.ServicioGloom.Carta ObtenerCartasBonus() {
            return base.Channel.ObtenerCartasBonus();
        }
        
        public System.Threading.Tasks.Task<ClienteGloomApp.ServicioGloom.Carta> ObtenerCartasBonusAsync() {
            return base.Channel.ObtenerCartasBonusAsync();
        }
        
        public void QuitarCartaDeMazoJugadorExterno(string nombreUsuario) {
            base.Channel.QuitarCartaDeMazoJugadorExterno(nombreUsuario);
        }
        
        public System.Threading.Tasks.Task QuitarCartaDeMazoJugadorExternoAsync(string nombreUsuario) {
            return base.Channel.QuitarCartaDeMazoJugadorExternoAsync(nombreUsuario);
        }
        
        public ClienteGloomApp.ServicioGloom.Carta[] ObtenerMazoRestante() {
            return base.Channel.ObtenerMazoRestante();
        }
        
        public System.Threading.Tasks.Task<ClienteGloomApp.ServicioGloom.Carta[]> ObtenerMazoRestanteAsync() {
            return base.Channel.ObtenerMazoRestanteAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicioGloom.IServicioHistorialPartida")]
    public interface IServicioHistorialPartida {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioHistorialPartida/ObtenerDatosHistorial", ReplyAction="http://tempuri.org/IServicioHistorialPartida/ObtenerDatosHistorialResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClienteGloomApp.ServicioGloom.ManejadorExcepciones), Action="http://tempuri.org/IServicioHistorialPartida/ObtenerDatosHistorialManejadorExcepc" +
            "ionesFault", Name="ManejadorExcepciones", Namespace="http://schemas.datacontract.org/2004/07/BibliotecaClases")]
        ClienteGloomApp.ServicioGloom.Sala[] ObtenerDatosHistorial(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioHistorialPartida/ObtenerDatosHistorial", ReplyAction="http://tempuri.org/IServicioHistorialPartida/ObtenerDatosHistorialResponse")]
        System.Threading.Tasks.Task<ClienteGloomApp.ServicioGloom.Sala[]> ObtenerDatosHistorialAsync(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioHistorialPartida/ObtenrParticipantesDeJuego", ReplyAction="http://tempuri.org/IServicioHistorialPartida/ObtenrParticipantesDeJuegoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClienteGloomApp.ServicioGloom.ManejadorExcepciones), Action="http://tempuri.org/IServicioHistorialPartida/ObtenrParticipantesDeJuegoManejadorE" +
            "xcepcionesFault", Name="ManejadorExcepciones", Namespace="http://schemas.datacontract.org/2004/07/BibliotecaClases")]
        string[] ObtenrParticipantesDeJuego(string identificadorSala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioHistorialPartida/ObtenrParticipantesDeJuego", ReplyAction="http://tempuri.org/IServicioHistorialPartida/ObtenrParticipantesDeJuegoResponse")]
        System.Threading.Tasks.Task<string[]> ObtenrParticipantesDeJuegoAsync(string identificadorSala);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicioHistorialPartidaChannel : ClienteGloomApp.ServicioGloom.IServicioHistorialPartida, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicioHistorialPartidaClient : System.ServiceModel.ClientBase<ClienteGloomApp.ServicioGloom.IServicioHistorialPartida>, ClienteGloomApp.ServicioGloom.IServicioHistorialPartida {
        
        public ServicioHistorialPartidaClient() {
        }
        
        public ServicioHistorialPartidaClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicioHistorialPartidaClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioHistorialPartidaClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioHistorialPartidaClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ClienteGloomApp.ServicioGloom.Sala[] ObtenerDatosHistorial(string nombreUsuario) {
            return base.Channel.ObtenerDatosHistorial(nombreUsuario);
        }
        
        public System.Threading.Tasks.Task<ClienteGloomApp.ServicioGloom.Sala[]> ObtenerDatosHistorialAsync(string nombreUsuario) {
            return base.Channel.ObtenerDatosHistorialAsync(nombreUsuario);
        }
        
        public string[] ObtenrParticipantesDeJuego(string identificadorSala) {
            return base.Channel.ObtenrParticipantesDeJuego(identificadorSala);
        }
        
        public System.Threading.Tasks.Task<string[]> ObtenrParticipantesDeJuegoAsync(string identificadorSala) {
            return base.Channel.ObtenrParticipantesDeJuegoAsync(identificadorSala);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicioGloom.ICreacionPartida", CallbackContract=typeof(ClienteGloomApp.ServicioGloom.ICreacionPartidaCallback))]
    public interface ICreacionPartida {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreacionPartida/ObtenerUsuariosYPersonajes", ReplyAction="http://tempuri.org/ICreacionPartida/ObtenerUsuariosYPersonajesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClienteGloomApp.ServicioGloom.ManejadorExcepciones), Action="http://tempuri.org/ICreacionPartida/ObtenerUsuariosYPersonajesManejadorExcepcione" +
            "sFault", Name="ManejadorExcepciones", Namespace="http://schemas.datacontract.org/2004/07/BibliotecaClases")]
        System.Collections.Generic.Dictionary<string, System.ValueTuple<string, int>> ObtenerUsuariosYPersonajes(string numeroSala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreacionPartida/ObtenerUsuariosYPersonajes", ReplyAction="http://tempuri.org/ICreacionPartida/ObtenerUsuariosYPersonajesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, System.ValueTuple<string, int>>> ObtenerUsuariosYPersonajesAsync(string numeroSala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreacionPartida/BuscarSalaExistente", ReplyAction="http://tempuri.org/ICreacionPartida/BuscarSalaExistenteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClienteGloomApp.ServicioGloom.ManejadorExcepciones), Action="http://tempuri.org/ICreacionPartida/BuscarSalaExistenteManejadorExcepcionesFault", Name="ManejadorExcepciones", Namespace="http://schemas.datacontract.org/2004/07/BibliotecaClases")]
        ClienteGloomApp.ServicioGloom.Sala BuscarSalaExistente(string idSala, string codigo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreacionPartida/BuscarSalaExistente", ReplyAction="http://tempuri.org/ICreacionPartida/BuscarSalaExistenteResponse")]
        System.Threading.Tasks.Task<ClienteGloomApp.ServicioGloom.Sala> BuscarSalaExistenteAsync(string idSala, string codigo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreacionPartida/ValidarCantidadJugadoresEnSala", ReplyAction="http://tempuri.org/ICreacionPartida/ValidarCantidadJugadoresEnSalaResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClienteGloomApp.ServicioGloom.ManejadorExcepciones), Action="http://tempuri.org/ICreacionPartida/ValidarCantidadJugadoresEnSalaManejadorExcepc" +
            "ionesFault", Name="ManejadorExcepciones", Namespace="http://schemas.datacontract.org/2004/07/BibliotecaClases")]
        void ValidarCantidadJugadoresEnSala(string numeroSala, int cantidadJugadores);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreacionPartida/ValidarCantidadJugadoresEnSala", ReplyAction="http://tempuri.org/ICreacionPartida/ValidarCantidadJugadoresEnSalaResponse")]
        System.Threading.Tasks.Task ValidarCantidadJugadoresEnSalaAsync(string numeroSala, int cantidadJugadores);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreacionPartida/ValidarPartidaNoIniciada", ReplyAction="http://tempuri.org/ICreacionPartida/ValidarPartidaNoIniciadaResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClienteGloomApp.ServicioGloom.ManejadorExcepciones), Action="http://tempuri.org/ICreacionPartida/ValidarPartidaNoIniciadaManejadorExcepcionesF" +
            "ault", Name="ManejadorExcepciones", Namespace="http://schemas.datacontract.org/2004/07/BibliotecaClases")]
        void ValidarPartidaNoIniciada(string numeroSala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreacionPartida/ValidarPartidaNoIniciada", ReplyAction="http://tempuri.org/ICreacionPartida/ValidarPartidaNoIniciadaResponse")]
        System.Threading.Tasks.Task ValidarPartidaNoIniciadaAsync(string numeroSala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreacionPartida/ObtenerFamiliaYPersonajesPorUsuario", ReplyAction="http://tempuri.org/ICreacionPartida/ObtenerFamiliaYPersonajesPorUsuarioResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClienteGloomApp.ServicioGloom.ManejadorExcepciones), Action="http://tempuri.org/ICreacionPartida/ObtenerFamiliaYPersonajesPorUsuarioManejadorE" +
            "xcepcionesFault", Name="ManejadorExcepciones", Namespace="http://schemas.datacontract.org/2004/07/BibliotecaClases")]
        System.Collections.Generic.Dictionary<string, System.ValueTuple<string, System.ValueTuple<string, int>[]>> ObtenerFamiliaYPersonajesPorUsuario(string numeroSala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreacionPartida/ObtenerFamiliaYPersonajesPorUsuario", ReplyAction="http://tempuri.org/ICreacionPartida/ObtenerFamiliaYPersonajesPorUsuarioResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, System.ValueTuple<string, System.ValueTuple<string, int>[]>>> ObtenerFamiliaYPersonajesPorUsuarioAsync(string numeroSala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreacionPartida/ObtenerFamiliaPorJugador", ReplyAction="http://tempuri.org/ICreacionPartida/ObtenerFamiliaPorJugadorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClienteGloomApp.ServicioGloom.ManejadorExcepciones), Action="http://tempuri.org/ICreacionPartida/ObtenerFamiliaPorJugadorManejadorExcepcionesF" +
            "ault", Name="ManejadorExcepciones", Namespace="http://schemas.datacontract.org/2004/07/BibliotecaClases")]
        System.Collections.Generic.Dictionary<string, string> ObtenerFamiliaPorJugador(string numeroSala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreacionPartida/ObtenerFamiliaPorJugador", ReplyAction="http://tempuri.org/ICreacionPartida/ObtenerFamiliaPorJugadorResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> ObtenerFamiliaPorJugadorAsync(string numeroSala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreacionPartida/ObtenerFamiliasYPersonajes", ReplyAction="http://tempuri.org/ICreacionPartida/ObtenerFamiliasYPersonajesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClienteGloomApp.ServicioGloom.ManejadorExcepciones), Action="http://tempuri.org/ICreacionPartida/ObtenerFamiliasYPersonajesManejadorExcepcione" +
            "sFault", Name="ManejadorExcepciones", Namespace="http://schemas.datacontract.org/2004/07/BibliotecaClases")]
        System.Collections.Generic.Dictionary<string, System.ValueTuple<string, int>[]> ObtenerFamiliasYPersonajes(string numeroSala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreacionPartida/ObtenerFamiliasYPersonajes", ReplyAction="http://tempuri.org/ICreacionPartida/ObtenerFamiliasYPersonajesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, System.ValueTuple<string, int>[]>> ObtenerFamiliasYPersonajesAsync(string numeroSala);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICreacionPartidaCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICreacionPartida/NotificarPartidaCreada")]
        void NotificarPartidaCreada(string mensaje);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICreacionPartidaChannel : ClienteGloomApp.ServicioGloom.ICreacionPartida, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreacionPartidaClient : System.ServiceModel.DuplexClientBase<ClienteGloomApp.ServicioGloom.ICreacionPartida>, ClienteGloomApp.ServicioGloom.ICreacionPartida {
        
        public CreacionPartidaClient(System.ServiceModel.InstanceContext contextoTablero) {
        public CreacionPartidaClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public CreacionPartidaClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public CreacionPartidaClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public CreacionPartidaClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public CreacionPartidaClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public System.Collections.Generic.Dictionary<string, System.ValueTuple<string, int>> ObtenerUsuariosYPersonajes(string numeroSala) {
            return base.Channel.ObtenerUsuariosYPersonajes(numeroSala);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, System.ValueTuple<string, int>>> ObtenerUsuariosYPersonajesAsync(string numeroSala) {
            return base.Channel.ObtenerUsuariosYPersonajesAsync(numeroSala);
        }
        
        public ClienteGloomApp.ServicioGloom.Sala BuscarSalaExistente(string idSala, string codigo) {
            return base.Channel.BuscarSalaExistente(idSala, codigo);
        }
        
        public System.Threading.Tasks.Task<ClienteGloomApp.ServicioGloom.Sala> BuscarSalaExistenteAsync(string idSala, string codigo) {
            return base.Channel.BuscarSalaExistenteAsync(idSala, codigo);
        }
        
        public void ValidarCantidadJugadoresEnSala(string numeroSala, int cantidadJugadores) {
            base.Channel.ValidarCantidadJugadoresEnSala(numeroSala, cantidadJugadores);
        }
        
        public System.Threading.Tasks.Task ValidarCantidadJugadoresEnSalaAsync(string numeroSala, int cantidadJugadores) {
            return base.Channel.ValidarCantidadJugadoresEnSalaAsync(numeroSala, cantidadJugadores);
        }
        
        public void ValidarPartidaNoIniciada(string numeroSala) {
            base.Channel.ValidarPartidaNoIniciada(numeroSala);
        }
        
        public System.Threading.Tasks.Task ValidarPartidaNoIniciadaAsync(string numeroSala) {
            return base.Channel.ValidarPartidaNoIniciadaAsync(numeroSala);
        }
        
        public System.Collections.Generic.Dictionary<string, System.ValueTuple<string, System.ValueTuple<string, int>[]>> ObtenerFamiliaYPersonajesPorUsuario(string numeroSala) {
            return base.Channel.ObtenerFamiliaYPersonajesPorUsuario(numeroSala);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, System.ValueTuple<string, System.ValueTuple<string, int>[]>>> ObtenerFamiliaYPersonajesPorUsuarioAsync(string numeroSala) {
            return base.Channel.ObtenerFamiliaYPersonajesPorUsuarioAsync(numeroSala);
        }
        
        public System.Collections.Generic.Dictionary<string, string> ObtenerFamiliaPorJugador(string numeroSala) {
            return base.Channel.ObtenerFamiliaPorJugador(numeroSala);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> ObtenerFamiliaPorJugadorAsync(string numeroSala) {
            return base.Channel.ObtenerFamiliaPorJugadorAsync(numeroSala);
        }
        
        public System.Collections.Generic.Dictionary<string, System.ValueTuple<string, int>[]> ObtenerFamiliasYPersonajes(string numeroSala) {
            return base.Channel.ObtenerFamiliasYPersonajes(numeroSala);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, System.ValueTuple<string, int>[]>> ObtenerFamiliasYPersonajesAsync(string numeroSala) {
            return base.Channel.ObtenerFamiliasYPersonajesAsync(numeroSala);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicioGloom.IChat", CallbackContract=typeof(ClienteGloomApp.ServicioGloom.IChatCallback))]
    public interface IChat {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChat/EnviarMensaje")]
        void EnviarMensaje(string nombreUsuario, string mensaje);
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/AgregarJugadorAChat", ReplyAction="http://tempuri.org/IChat/AgregarJugadorAChatResponse")]
        void AgregarJugadorAChat(string nombreUsuario, string idSala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/AgregarJugadorAChat", ReplyAction="http://tempuri.org/IChat/AgregarJugadorAChatResponse")]
        System.Threading.Tasks.Task AgregarJugadorAChatAsync(string nombreUsuario, string idSala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/EnviarMensaje", ReplyAction="http://tempuri.org/IChat/EnviarMensajeResponse")]
        void EnviarMensaje(string nombreUsuario, string mensaje, string idSala);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChat/EnviarMensaje")]
        System.Threading.Tasks.Task EnviarMensajeAsync(string nombreUsuario, string mensaje);
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/EnviarMensaje", ReplyAction="http://tempuri.org/IChat/EnviarMensajeResponse")]
        System.Threading.Tasks.Task EnviarMensajeAsync(string nombreUsuario, string mensaje, string idSala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/ObtenerHistorialMensajes", ReplyAction="http://tempuri.org/IChat/ObtenerHistorialMensajesResponse")]
        ClienteGloomApp.ServicioGloom.Chat[] ObtenerHistorialMensajes(string idSala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/ObtenerHistorialMensajes", ReplyAction="http://tempuri.org/IChat/ObtenerHistorialMensajesResponse")]
        System.Threading.Tasks.Task<ClienteGloomApp.ServicioGloom.Chat[]> ObtenerHistorialMensajesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/AgregarJugadorAChat", ReplyAction="http://tempuri.org/IChat/AgregarJugadorAChatResponse")]
        void AgregarJugadorAChat(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/AgregarJugadorAChat", ReplyAction="http://tempuri.org/IChat/AgregarJugadorAChatResponse")]
        System.Threading.Tasks.Task AgregarJugadorAChatAsync(string nombreUsuario);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChat/EnviarMensajeCliente")]
        void EnviarMensajeCliente(ClienteGloomApp.ServicioGloom.Chat mensajesChat);
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChat/RecibirMensaje")]
        void RecibirMensaje(ClienteGloomApp.ServicioGloom.Chat mensaje);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatChannel : ClienteGloomApp.ServicioGloom.IChat, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChatClient : System.ServiceModel.DuplexClientBase<ClienteGloomApp.ServicioGloom.IChat>, ClienteGloomApp.ServicioGloom.IChat {
        
        public ChatClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ChatClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ChatClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void EnviarMensaje(string nombreUsuario, string mensaje) {
            base.Channel.EnviarMensaje(nombreUsuario, mensaje);
        public void AgregarJugadorAChat(string nombreUsuario, string idSala) {
            base.Channel.AgregarJugadorAChat(nombreUsuario, idSala);
        }
        
        public System.Threading.Tasks.Task AgregarJugadorAChatAsync(string nombreUsuario, string idSala) {
            return base.Channel.AgregarJugadorAChatAsync(nombreUsuario, idSala);
        }
        
        public void EnviarMensaje(string nombreUsuario, string mensaje, string idSala) {
            base.Channel.EnviarMensaje(nombreUsuario, mensaje, idSala);
        }
        
        public System.Threading.Tasks.Task EnviarMensajeAsync(string nombreUsuario, string mensaje, string idSala) {
            return base.Channel.EnviarMensajeAsync(nombreUsuario, mensaje, idSala);
        }
        
        public ClienteGloomApp.ServicioGloom.Chat[] ObtenerHistorialMensajes(string idSala) {
            return base.Channel.ObtenerHistorialMensajes(idSala);
        }
        
        public System.Threading.Tasks.Task<ClienteGloomApp.ServicioGloom.Chat[]> ObtenerHistorialMensajesAsync(string idSala) {
            return base.Channel.ObtenerHistorialMensajesAsync(idSala);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicioGloom.IInvitacion")]
    public interface IInvitacion {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvitacion/EnviarInvitacion", ReplyAction="http://tempuri.org/IInvitacion/EnviarInvitacionResponse")]
        bool EnviarInvitacion(string correo, string codigo, string administrador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvitacion/EnviarInvitacion", ReplyAction="http://tempuri.org/IInvitacion/EnviarInvitacionResponse")]
        System.Threading.Tasks.Task<bool> EnviarInvitacionAsync(string correo, string codigo, string administrador);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IInvitacionChannel : ClienteGloomApp.ServicioGloom.IInvitacion, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InvitacionClient : System.ServiceModel.ClientBase<ClienteGloomApp.ServicioGloom.IInvitacion>, ClienteGloomApp.ServicioGloom.IInvitacion {
        
        public InvitacionClient() {
        }
        
        public InvitacionClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public System.Threading.Tasks.Task EnviarMensajeAsync(string nombreUsuario, string mensaje) {
            return base.Channel.EnviarMensajeAsync(nombreUsuario, mensaje);
        }
        
        public InvitacionClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InvitacionClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AgregarJugadorAChat(string nombreUsuario) {
            base.Channel.AgregarJugadorAChat(nombreUsuario);
        }
        
        public System.Threading.Tasks.Task AgregarJugadorAChatAsync(string nombreUsuario) {
            return base.Channel.AgregarJugadorAChatAsync(nombreUsuario);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicioGloom.IInvitacion")]
    public interface IInvitacion {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvitacion/EnviarInvitacion", ReplyAction="http://tempuri.org/IInvitacion/EnviarInvitacionResponse")]
        bool EnviarInvitacion(string correo, string codigo, string administrador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvitacion/EnviarInvitacion", ReplyAction="http://tempuri.org/IInvitacion/EnviarInvitacionResponse")]
        System.Threading.Tasks.Task<bool> EnviarInvitacionAsync(string correo, string codigo, string administrador);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IInvitacionChannel : ClienteGloomApp.ServicioGloom.IInvitacion, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InvitacionClient : System.ServiceModel.ClientBase<ClienteGloomApp.ServicioGloom.IInvitacion>, ClienteGloomApp.ServicioGloom.IInvitacion {
        
        public InvitacionClient() {
        }
        
        public InvitacionClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public InvitacionClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InvitacionClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InvitacionClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool EnviarInvitacion(string correo, string codigo, string administrador) {
            return base.Channel.EnviarInvitacion(correo, codigo, administrador);
        }
        
        public System.Threading.Tasks.Task<bool> EnviarInvitacionAsync(string correo, string codigo, string administrador) {
            return base.Channel.EnviarInvitacionAsync(correo, codigo, administrador);
        }
    }
}
